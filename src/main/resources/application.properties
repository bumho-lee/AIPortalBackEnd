spring.application.name=esea-api

# 데이터베이스 연결 URL
spring.datasource.url=${POSTGRES_URL}
spring.datasource.username=${POSTGRES_USERNAME}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# openapi 설정
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/api-docs

# JPA 설정
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# JPA 엔티티의 테이블 이름을 대소문자 그대로 유지
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# JPA 엔티티 검색 전략
spring.data.rest.detection-strategy=ANNOTATED

# 웹소켓 로그
logging.level.org.springframework.web.socket=DEBUG

# 타임존 설정
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Neoslo Configuration
neoslo.enabled=${AI_NEOSLO_ENABLED}

# DynamoDB 설정
aws.dynamodb.endpoint=${AI_AWS_DYNAMODB_ENDPOINT}
aws.region=${AI_AWS_REGION}
aws.accessKey=${AI_AWS_ACCESS_KEY}
aws.secretKey=${AI_AWS_SECRET_KEY}

# 파일 업로드 최대 크기 설정 (30MB)
spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB

# spring.jpa.show-sql=true
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Logback ?? log4j2 ??
logging.config=classpath:log4j2.xml

spring.mvc.async.request-timeout=300000
