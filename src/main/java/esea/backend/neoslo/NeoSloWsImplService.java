package esea.backend.neoslo;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;
import lombok.extern.log4j.Log4j2;
import org.apache.commons.lang3.StringUtils;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@Log4j2
@WebServiceClient(name = "NeoSloWsImplService", targetNamespace = "http://service.sso.common.branch.neo.hanwha/")
public class NeoSloWsImplService
    extends Service
{

    private static final URL NEOSLOWSIMPLSERVICE_WSDL_LOCATION;
    private static final WebServiceException NEOSLOWSIMPLSERVICE_EXCEPTION;
    private static final QName NEOSLOWSIMPLSERVICE_QNAME = new QName("http://service.sso.common.branch.neo.hanwha/", "NeoSloWsImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            String wsdlUrl = StringUtils.defaultIfEmpty(System.getenv("SLO_WSDL_URL"), "http://htg.circle.hanwha.com/api/ss/neoslo?wsdl");
            log.info("SLO_WSDL_URL = " + wsdlUrl);
            url = new URL(wsdlUrl);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        NEOSLOWSIMPLSERVICE_WSDL_LOCATION = url;
        NEOSLOWSIMPLSERVICE_EXCEPTION = e;
    }

    public NeoSloWsImplService() {
        super(__getWsdlLocation(), NEOSLOWSIMPLSERVICE_QNAME);
    }

    public NeoSloWsImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), NEOSLOWSIMPLSERVICE_QNAME, features);
    }

    public NeoSloWsImplService(URL wsdlLocation) {
        super(wsdlLocation, NEOSLOWSIMPLSERVICE_QNAME);
    }

    public NeoSloWsImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, NEOSLOWSIMPLSERVICE_QNAME, features);
    }

    public NeoSloWsImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public NeoSloWsImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns NeoSloWs
     */
    @WebEndpoint(name = "NeoSloWsImplPort")
    public NeoSloWs getNeoSloWsImplPort() {
        return super.getPort(new QName("http://service.sso.common.branch.neo.hanwha/", "NeoSloWsImplPort"), NeoSloWs.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NeoSloWs
     */
    @WebEndpoint(name = "NeoSloWsImplPort")
    public NeoSloWs getNeoSloWsImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.sso.common.branch.neo.hanwha/", "NeoSloWsImplPort"), NeoSloWs.class, features);
    }

    private static URL __getWsdlLocation() {
        if (NEOSLOWSIMPLSERVICE_EXCEPTION!= null) {
            throw NEOSLOWSIMPLSERVICE_EXCEPTION;
        }
        return NEOSLOWSIMPLSERVICE_WSDL_LOCATION;
    }

}
